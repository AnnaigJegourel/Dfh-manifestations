{% extends 'base.html.twig' %}

{% block title %}
	Nouvelle Manifestation
{% endblock %}
{% block javascripts %}
	{{ parent() }}
{% endblock %}
{% block body %}
	<h1>Nouvelle Manifestation Scientifique</h1>
	<form action="{{ path('app_manifestation_new') }}" method="post">
		<div class="col-xs-6 col-md-offset-3">
			<div class="col-md-12">
				<fieldset>

					<legend>
						Choix du projet</legend>
					<div class="form-group">
						<label>
							Projet
						</label>
						{{ form_widget(form.project, {'attr': {'class': 'form-control', 'id': 'projet'}}) }}
					</div>
					<legend>Informations Générales</legend>
					<div class="form-group">
						<label>
							Titre Fr
						</label>
						{{ form_widget(form.titreFr, {'attr': {'class': 'form-control', 'id': 'titre_fr'}}) }}
					</div>
					<div class="form-group">
						<label>
							Titre De
						</label>
						{{ form_widget(form.titreDe, {'attr': {'class': 'form-control', 'id': 'titre_de'}}) }}
					</div>
					<div class="form-group">
						<label>
							Titre En
						</label>
						{{ form_widget(form.titreEn, {'attr': {'class': 'form-control', 'id': 'titre_en'}}) }}
					</div>
					<hr>
					<legend>Dates et Durée</legend>
					<div class="form-group">
						<label>
							Date Début
						</label>
						{{ form_widget(form.date_debut, {'attr': {'class': 'form-control', 'id': "date_debut"}}) }}
					</div>
					<div class="form-group">
						<label>
							Date Fin
						</label>

						{{ form_widget(form.date_fin, {'attr': {'class': 'form-control', 'id': "date_fin"}}) }}
					</div>
					<div class="form-group">
						<label>
							Durée (jours)
						</label>
						{{ form_widget(form.duree, {'attr': {'class': 'form-control', 'id': 'duree'}}) }}
					</div>
					<div class="form-group">
						{{ form_widget(form.justification_duree, {'attr': {'class': 'form-control', 'id': 'justification_duree', 'style': 'display: none;', 
						'placeholder' : 'veuillez justifier la durée'}}) }}
					</div>

					<hr>
					<legend>Localisation France</legend>
					<div class="form-group">
						<label>
							Région
						</label>
						{{ form_widget(form.region) }}
					</div>
					<div class="form-group">
						<label>
							Département
						</label>
						{{ form_widget(form.departement) }}
					</div>
					<div class="form-group">
						<label>
							Ville
						</label>
						{{ form_widget(form.commune) }}
					</div>
					<hr>
					<legend>Localisation Allemagne</legend>

					<fieldset>
						<legend>Choix Pays Tiers</legend>
						<div class="form-group">
							<label>
								Pays tiers
							</label>
							{{ form_widget(form.countries) }}
						</div>
					</fieldset>
					<hr>
					<div class="form-group mt-4">
						{{ include('manifestation/_form.html.twig') }}
						<a href="{{ path('app_manifestation_index') }}" class="btn btn-secondary btn-lg pull-left">{{ button_label|default('Retour') }}</a>
					</div>

				</fieldset>
			</div>
		</div>

	</form>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
var regionField = document.querySelector('#manifestation_region');
var departementField = document.querySelector('#manifestation_departement');
regionField.addEventListener('change', function () {
var selectedRegion = this.value;
console.log(selectedRegion);
fetchDepartements(selectedRegion);


});

departementField.addEventListener('change', function () {
var selectedDepartement = this.value;
fetchCommunes(selectedDepartement);
});

function fetchDepartements(selectedRegion) {
fetch('/api/regions/' + selectedRegion + '/departements').then(response => {
if (!response.ok) {
throw new Error('Erreur de réseau');
}
return response.json();
}).then(data => {
departementField.innerHTML = '';
data.forEach(function (departement) {
var option = document.createElement('option');
option.value = departement.id;
option.textContent = departement.nom;
departementField.appendChild(option);
});
}).catch(error => console.error('Erreur lors de la récupération des départements:', error));
}

function fetchCommunes(selectedDepartement) {
fetch('/api/departements/' + selectedDepartement + '/villes').then(response => {
if (!response.ok) {
throw new Error('Erreur de réseau');
}
return response.json();
}).then(data => {
var communeSelect = document.querySelector('#manifestation_commune');
communeSelect.innerHTML = '';
data.forEach(function (commune) {
var option = document.createElement('option');
option.value = commune.id;
option.textContent = commune.nom;
communeSelect.appendChild(option);
});
}).catch(error => console.error('Erreur lors de la récupération des communes:', error));
}

var dateDebutInput = document.querySelector('#manifestation_date_debut');
var dateFinInput = document.querySelector('#manifestation_date_fin');
var dureeInput = document.querySelector('#manifestation_duree');
var justificationDureeInput = document.querySelector('#manifestation_justification_duree');

dateFinInput.addEventListener('change', function () {
var dateDebut = new Date(dateDebutInput.value);
var dateFin = new Date(dateFinInput.value);
var difference = dateFin - dateDebut;
var jours = difference / (1000 * 60 * 60 * 24);
dureeInput.value = jours;
if (jours > 20) {
justificationDureeInput.style.display = 'block';
} else {
justificationDureeInput.style.display = 'none';
}
});
});
	</script>


{% endblock %}
